{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-state.service.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/jwt.interceptor.ts","webpack:///src/app/auth/login.component.ts","webpack:///src/app/auth/login.component.html","webpack:///src/app/auth/logout.component.ts","webpack:///src/app/auth/logout.component.html","webpack:///src/app/auth/not-logged-in.guard.ts","webpack:///src/app/complete-profile/complete-profile.component.ts","webpack:///src/app/complete-profile/complete-profile.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/profile-completed/profile-completed.component.ts","webpack:///src/app/profile-completed/profile-completed.component.html","webpack:///src/app/qr-code-handling/qr-code-display.component.ts","webpack:///src/app/qr-code-handling/qr-code-display.component.html","webpack:///src/app/qr-code-handling/qr-code-reader.component.ts","webpack:///src/app/qr-code-handling/qr-code-reader.component.html","webpack:///src/app/qr-code-handling/qr.service.ts","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/start/start.component.ts","webpack:///src/app/start/start.component.html","webpack:///src/app/travel/travel.component.ts","webpack:///src/app/travel/travel.component.html","webpack:///src/app/travels/travels.component.ts","webpack:///src/app/travels/travels.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","floatLabel","declarations","providers","entryComponents","bootstrap","AuthStateService","isLoggedIn","tmp","localStorage","getItem","jwtToken","setItem","undefined","removeItem","providedIn","AuthGuard","router","authState","route","state","autoLogin","navigate","queryParams","returnUrl","url","AuthService","http","email","password","requestOptions","responseType","post","apiUrl","pipe","response","login","user","jwt_token","JwtInterceptor","request","next","clone","setHeaders","Authorization","handle","LoginComponent","authService","fb","loading","username","regForm","group","required","minLength","snapshot","value","subscribe","data","error","onLogin","LogoutComponent","logout","NotLoggedInGuard","CompleteProfileComponent","journeyForm","journeys","length","profilForm","name","birthday","phone","street","zip","city","country","img","correctness","requiredTrue","controls","onSubmit","onBack","HomeComponent","ProfileCompletedComponent","emails","onEmailAdd","onEmailSend","onDashboard","QrCodeDisplayComponent","qrService","qrCode","getQrCode","toQrReader","QrCodeReaderComponent","hasCameras","message","selectedDevice","scanner","camerasFound","devices","console","log","availableDevices","device","test","label","camerasNotFound","permissionResponse","answer","hasPermission","resultString","registerContactEvent","qrResultString","handleQrCodeResult","QrService","get","scannedQr","scannedQrCode","SignUpComponent","StartComponent","reg","onReg","TravelComponent","bsRef","travelForm","countryName","countryCode","from","to","notice","dismiss","onCancel","TravelsComponent","bs","Date","open","afterDismissed","travel","push","onAdd","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { NotLoggedInGuard } from './auth/not-logged-in.guard';\n\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { QrCodeReaderComponent } from './qr-code-handling/qr-code-reader.component';\nimport { QrCodeDisplayComponent } from './qr-code-handling/qr-code-display.component';\nimport { LoginComponent } from './auth/login.component';\nimport { LogoutComponent } from './auth/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { StartComponent } from './start/start.component';\nimport { CompleteProfileComponent } from './complete-profile/complete-profile.component';\nimport { TravelsComponent } from './travels/travels.component';\nimport { ProfileCompletedComponent } from './profile-completed/profile-completed.component';\n\n\nconst routes: Routes = [\n\t// public\n\t{ path: 'start', component: StartComponent },\n\t{ path: 'login', component: LoginComponent, canActivate: [NotLoggedInGuard] },\n\t{ path: 'logout', component: LogoutComponent },\n\t{ path: 'sign-up', component: SignUpComponent, canActivate: [NotLoggedInGuard] },\n\n\t// logged in\n\t// { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n\t{ path: 'qr-code-reader', component: QrCodeReaderComponent, canActivate: [AuthGuard] },\n\t{ path: '', component: QrCodeDisplayComponent, canActivate: [AuthGuard] },\n\t{ path: 'qr-code-display', component: QrCodeDisplayComponent, canActivate: [AuthGuard] },\n\n\t{ path: 'complete-profile', component: CompleteProfileComponent, canActivate: [AuthGuard] },\n\t{ path: 'profile-completed', component: ProfileCompletedComponent, canActivate: [AuthGuard] },\n\t{ path: 'travels', component: TravelsComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'infectionchain';\n}\n","<div class=\"m-8\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n// qr code functionality\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { NgxKjuaModule } from 'ngx-kjua';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { QrCodeReaderComponent } from './qr-code-handling/qr-code-reader.component';\nimport { QrCodeDisplayComponent } from './qr-code-handling/qr-code-display.component';\n// auth\nimport { LoginComponent } from './auth/login.component';\nimport { ErrorInterceptor } from './auth/error.interceptor';\nimport { JwtInterceptor } from './auth/jwt.interceptor';\nimport { fakeBackendProvider } from './auth/fake-backend.interceptor';\nimport { HomeComponent } from './home/home.component';\nimport { LogoutComponent } from './auth/logout.component';\nimport { StartComponent } from './start/start.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { TravelComponent } from './travel/travel.component';\nimport { CompleteProfileComponent } from './complete-profile/complete-profile.component';\nimport { TravelsComponent } from './travels/travels.component';\nimport { ProfileCompletedComponent } from './profile-completed/profile-completed.component';\nimport { MatListModule } from '@angular/material/list';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tSignUpComponent,\n\t\tQrCodeReaderComponent,\n\t\tQrCodeDisplayComponent,\n\t\tLoginComponent,\n\t\tHomeComponent,\n\t\tLogoutComponent,\n\t\tStartComponent,\n        CompleteProfileComponent,\n        TravelsComponent,\n        TravelComponent,\n        ProfileCompletedComponent\n\t],\n\timports: [\n        CommonModule,\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tHttpClientModule,\n\t\tAppRoutingModule,\n\t\tZXingScannerModule,\n\t\tNgxKjuaModule,\n\n\t\tFlexLayoutModule,\n\t\tMatButtonModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tBrowserAnimationsModule,\n\t\tReactiveFormsModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatBottomSheetModule,\n        MatCardModule,\n        MatListModule,\n\t],\n\tproviders: [\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n\t\t// { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\t\t{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {floatLabel: 'always'}},\n\n        // provider used to create fake backend\n        // fakeBackendProvider\n    ],\n    entryComponents: [\n        TravelComponent,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthStateService {\n\n    public isLoggedIn = false;\n    public jwtToken: string;\n\n    constructor() {\n        let tmp = localStorage.getItem('jwt_token');\n        if (tmp) {\n            this.jwtToken = tmp;\n            this.isLoggedIn = true;\n        }\n    }\n\n    login(jwtToken) {\n        this.jwtToken = jwtToken;\n        localStorage.setItem('jwt_token', jwtToken);\n        this.isLoggedIn = true;\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        this.jwtToken = undefined;\n        localStorage.removeItem('jwt_token');\n        this.isLoggedIn = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthStateService } from './auth-state.service';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authState: AuthStateService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.authState.isLoggedIn || environment.autoLogin) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n\t\tthis.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { RegistrationModel } from '../models/registration.model';\nimport { AuthStateService } from './auth-state.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient, private authState: AuthStateService) {}\n\n    login(email: string, password: string) {\n\n\t\tconst requestOptions: Object = {\n\t\t\tresponseType: 'text'\n\t\t};\n\n        return this.http.post<any>(`${environment.apiUrl}/users/login`, {\n\t\t\t\t\"email\": email,\n\t\t\t\t\"password\": password\n\t\t\t},\n\t\t\trequestOptions\n\t\t\t)\n            .pipe(map(response => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n\t\t\t\tthis.authState.login(response);\n            }));\n    }\n\n    reg(user: RegistrationModel) {\n        return this.http.post<any>(`${environment.apiUrl}/reg`, user)\n            .pipe(map(response => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('jwt_token', response.jwt_token);\n                this.authState.isLoggedIn = true;\n            }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthStateService } from './auth-state.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authState: AuthStateService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        if (this.authState.isLoggedIn && this.authState.jwtToken) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${this.authState.jwtToken}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\tpublic loading: boolean = false;\n\tpublic error: string;\n\n\tpublic username: string = \"\";\n\tpublic password: string = \"\";\n\n\tpublic returnUrl: string = \"\";\n\n    regForm: FormGroup;\n\n\tconstructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) { }\n\n\tngOnInit(): void {\n        this.regForm = this.fb.group({\n            'email': ['', [Validators.required, Validators.email]],\n            'password': ['', [Validators.required, Validators.minLength(1)]],\n        });\n\n\t\tthis.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\t}\n\n\tonLogin() {\n\t\tthis.authService.login(this.regForm.value.email, this.regForm.value.password)\n\t\t\t// .pipe(first())\n\t\t\t.subscribe(\n\t\t\t\tdata => {\n\t\t\t\t\t// this.router.navigate([this.returnUrl]);\n\t\t\t\t\tthis.router.navigate(['']);\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tthis.error = error;\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t});\n\t}\n}\n","<div class=\"flex justify-center mt-10\">\n\t<img style=\"margin:auto\" src=\"./assets/sword-stone-pull.svg\"/>\n</div>\n<div class=\"text-center mt-3\">\n\t<h3 class=\"text-xl\">Login</h3>\n</div>\n<form class=\"mx-10 my-4\" [formGroup]=\"regForm\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" placeholder=\"jacksonalive@gmail.com\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"*******\">\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onLogin()\" [disabled]=\"regForm.invalid\">Login</button>\n</form>\n\n\n<!-- <div> -->\n\t<!-- <div class=\"mx-10 my-4\"> -->\n\t\t<!-- <label>Name</label><br> -->\n\t\t<!-- <input [(ngModel)]=\"username\" style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"text\" placeholder=\"Michael Jackson II.\"/> -->\n\t<!-- </div> -->\n\t<!-- <div class=\"mx-10 my-4\"> -->\n\t\t<!-- <label>Password</label><br> -->\n\t\t<!-- <input [(ngModel)]=\"password\" style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"password\" placeholder=\"123456\"/> -->\n\t<!-- </div> -->\n\t<!-- <div class=\"mx-10 my-4\"> -->\n\t\t<!-- <a href=\"#\">Forgot password?</a> -->\n\t<!-- </div> -->\n\n\t<!-- <div class=\"mx-10 mt-12 text-center\"> -->\n\t\t<!-- <button (click)=\"onSubmit()\" style=\"background-color: #395380\" class=\"text-white font-bold py-2 px-4 rounded w-64\">Login</button> -->\n\t<!-- </div> -->\n<!-- </div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { AuthStateService } from './auth-state.service';\n\n@Component({\n\tselector: 'app-logout',\n\ttemplateUrl: './logout.component.html',\n\tstyleUrls: []\n})\nexport class LogoutComponent implements OnInit {\n\n\tconstructor(private authState: AuthStateService){}\n\n\tngOnInit(): void {\n\t\tthis.authState.logout();\n\t}\n\n}\n","<p>logout works!</p>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthStateService } from './auth-state.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NotLoggedInGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authState: AuthStateService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (!this.authState.isLoggedIn) {\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n\t\tthis.router.navigate(['']);\n        return false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-complete-profile',\n  templateUrl: './complete-profile.component.html',\n  styleUrls: ['./complete-profile.component.scss']\n})\nexport class CompleteProfileComponent implements OnInit {\n\n\n  profilForm: FormGroup;\n  journeyForm: FormGroup;\n  constructor(private fb: FormBuilder, private router: Router) { }\n\n  finalLabel() {\n    return this.journeyForm.value.journeys.length === 0 ? 'Nein, ich bin hier gewesen' : 'Fertig';\n  }\n\n  ngOnInit(): void {\n    this.profilForm = this.fb.group({\n      name: ['', Validators.required],\n      birthday: [null, Validators.required],\n      phone: [],\n      street: [],\n      zip: [],\n      city: [],\n      country: ['Deutschland'],\n      img: [],\n      correctness: [false, Validators.requiredTrue],\n    });\n\n  }\n\n  journeys() {\n    return this.journeyForm.controls.journeys as FormArray;\n  }\n\n\n  onBack() {\n    this.router.navigate(['/']);\n  }\n\n  onSubmit() {\n    this.router.navigate(['/travels']);\n  }\n}\n","<form [formGroup]=\"profilForm\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <h1>Vervollständige dein Profil</h1>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n        <mat-icon>person</mat-icon>\n        <p>Deine Daten können lediglich deine Freunde sehen. Für uns ist es wichtig, dass du wirklich du bist.</p>\n    </div>\n\n    <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"name\" required>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Geburtstrag</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"birthday\" required type=\"date\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Telefonnummer</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"phone\" type=\"tel\">\n    </mat-form-field>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n        <mat-icon>place</mat-icon>\n        <p>Mit deinem Wohnsitz verrifizieren wir dich als Person und erstellen ir deinen Notfallpass.</p>\n    </div>\n\n    <mat-form-field>\n        <mat-label>Straße mit Hausnummer</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"street\" >\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Postleitzahl</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"zip\" >\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Ort</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"city\" >\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Land</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"country\" >\n    </mat-form-field>\n\n    <mat-label>Profil</mat-label>\n    <input placeholder=\"\" formControlName=\"img\" type=\"file\">\n\n    <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n        <mat-checkbox formControlName=\"correctness\" color=\"primary\"></mat-checkbox>\n        <small>Hiermit bestätige ich die Richtigkeit meiner Angaben</small>\n    </div>\n    <button mat-raised-button (click)=\"onSubmit()\" [disabled]=\"profilForm.invalid\" color=\"primary\">Weiter</button>\n    <button mat-button (click)=\"onBack()\">zurück</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <a  [routerLink]=\"['/complete-profile']\">Complete Profile</a>\n    <a  [routerLink]=\"['/qr-code-reader']\"> Scan QR Code</a>\n    <a  [routerLink]=\"['/qr-code-display']\">Show personal QR Code</a>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-completed',\n  templateUrl: './profile-completed.component.html',\n  styleUrls: ['./profile-completed.component.scss']\n})\nexport class ProfileCompletedComponent implements OnInit {\n\n  emails: string[] = [''];\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onEmailAdd() {\n    this.emails = [...this.emails, ''];\n  }\n\n  onDashboard() {\n    this.router.navigate(['/']);\n  }\n\n  onEmailSend() {\n    // TODO\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"1em\">\n\n    <img>\n\n    <div>\n        <h2>Super</h2>\n        <h1>Dein Proil ist vollständig</h1>\n        <p>\n            Du hast nun vollen Zugriff auf die Auswertungen und Funktionen der App:\n        </p>\n    </div>\n\n    <mat-card>\n        <mat-card-content>\n            <mat-list>\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                       Überblick über aktuelle Mitmenschen an bestimmten Orten\n                    </p>\n                </mat-list-item>\n\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                        Verstehe welche ptentiellen Risiken dich an den verschienden Orten begegnen\n                    </p>\n                </mat-list-item>\n\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                        Bekomme Benachrichtigungen bei erhöhten Ansammlungen von Menschen\n                    </p>\n                </mat-list-item>\n\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                        Bleibe up-to-date bei aktuellen Entscheidungen der Regierung\n                    </p>\n                </mat-list-item>\n            </mat-list>\n        </mat-card-content>\n    </mat-card>\n\n    <p>\n        Werden Personen positiv auf Corona getestet, können Riskogruppen und Menschen informiert werden, sodass rechtzeitig die entpsrechnenden Schritte eingelietet werden können.\n    </p>\n\n    <div fxLayout=\"row\">\n        <img>\n        <div>Hilf uns alle Menschen zu erreichen auch deine Familie.</div>\n    </div>\n\n    <mat-form-field *ngFor=\"let email of emails; let i = index\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"Alicewondertree@gmail.com\" [(ngModel)]=\"emails[i]\">\n    </mat-form-field>\n\n    <div fxLayout=\"row\" (click)=\"onEmailAdd()\">\n        <mat-icon>add</mat-icon>\n        weitere Menschen einladen\n    </div>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onEmailSend()\" >Email versenden</button>\n    <button mat-button (click)=\"onDashboard()\">Zum Dashboard</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QrService } from './qr.service';\n\n@Component({\n\tselector: 'app-qr-code-display',\n\ttemplateUrl: './qr-code-display.component.html',\n\tstyleUrls: ['./qr-code-display.component.scss']\n})\nexport class QrCodeDisplayComponent implements OnInit {\n\n\tconstructor(private router: Router, private qrService: QrService) { }\n\n\tqrCode: string = \"hallo\";\n\n\tngOnInit(): void {\n\t\tthis.qrService.getQrCode().subscribe((qrCode) => {\n\t\t\tthis.qrCode = qrCode;\n\t\t});\n\t}\n\n\ttoQrReader() {\n\t\tthis.router.navigate(['/qr-code-reader']);\n\t}\n}\n","<div class=\"text-center m-12\">\n\t<h1 class=\"font-bold text-3xl mt-4\">Dein QR Code</h1>\n\t<p class=\"my-4 text-center\">\n\t\tLass andere diesen QR Code scannen, um euren Kontakt zu dokumentieren.\n\t</p>\n\t<div class=\"flex justify-content pt-8\">\n\t\t<p class=\"m-auto\">\n\t\t\t<ngx-kjua [text]=\"qrCode\"></ngx-kjua>\n\t\t</p>\n\t</div>\n</div>\n\n<form class=\"mx-10 my-8\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n\t<button mat-raised-button class=\"m-auto mx-8\" color=\"primary\" (click)=\"toQrReader()\">QR Reader</button>\n</form>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { QrService } from './qr.service';\n\n@Component({\n  selector: 'app-qr-code-reader',\n  templateUrl: './qr-code-reader.component.html',\n  styleUrls: ['./qr-code-reader.component.scss']\n})\nexport class QrCodeReaderComponent implements OnInit, AfterViewInit {\n\n    hasCameras = false;\n    hasPermission: boolean;\n    qrResultString: string;\n\n\tmessage: string = \"\";\n\n    availableDevices: MediaDeviceInfo[];\n    selectedDevice: MediaDeviceInfo = null;\n\n    @ViewChild('scanner')\n    scanner: ZXingScannerComponent;\n\n\tconstructor(private qrService: QrService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tngAfterViewInit(): void {\n        this.scanner.camerasFound.subscribe(\n\t\t\t(devices: MediaDeviceInfo[]) => {\n\t\t\t\tconsole.log(devices);\n\n\t\t\t\tthis.hasCameras = true;\n\t\t\t\tif(devices.length == 0)\n\t\t\t\t\tthis.hasCameras = false;\n\n\t\t\t\tthis.availableDevices = devices;\n\n\t\t\t\tif(this.availableDevices.length == 1)\n\t\t\t\t\tthis.selectedDevice = this.availableDevices[0];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// selects the devices's back camera\n\t\t\t\t\tfor (const device of devices) {\n\t\t\t\t\t\tif (/back|rear|rück|environment/gi.test(device.label)) {\n\t\t\t\t\t\t\tthis.selectedDevice = device;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if(!this.selectedDevice)\n\t\t\t\t// {\n\t\t\t\t\t// this.message = \"Das verwendete Gerät wird nicht unterstützt oder hat keine Kamera auf der Rückseite.\";\n\t\t\t\t// }\n\n\t\t\t\t// this.scanner.restartScan();\n\t\t\t}\n\t\t);\n\n\t\tthis.scanner.camerasNotFound.subscribe((devices: MediaDeviceInfo[]) => {\n\t\t\tthis.hasCameras = false;\n\t\t\tthis.message = \"Das verwendete Gerät wird nicht unterstützt oder hat keine Kameras.\";\n\t\t});\n\n\t\tthis.scanner.permissionResponse.subscribe((answer: boolean) => {\n\t\t\tthis.hasPermission = answer;\n\n\t\t\tif(!answer)\n\t\t\t\tthis.message = \"ResearchDesk hat keine Erlaubnis auf die Kamera zuzugreifen. Bitte aktivieren Sie Kamerazugriff.\";\n\t\t});\n\t}\n\n    handleQrCodeResult(resultString: string) {\n\t\tconsole.log(\"trying to register contact event\", resultString);\n\t\tthis.qrService.registerContactEvent(resultString).subscribe(()=> {\n\t\t\tconsole.log(\"registered contact event for\", resultString);\n\t\t});\n\n\t\t// this.public_patient_service.check_if_patient_exists(pid).subscribe((result) => {\n\t\t\t// if(result)\n\t\t\t// {\n\t\t\t\t// let patient_token = result;\n\t\t\t\t// this.router.navigate([\"patient\", patient_token]);\n\t\t\t// }\n\t\t\t// else\n\t\t\t\t// this.router.navigate([\"consent\", pid]);\n\t\t// });\n\n\n        this.qrResultString = resultString;\n    }\n}\n","<div class=\"text-center\">\n\t<h1 class=\"font-bold text-3xl mt-4\">QR Code scannen</h1>\n\t<p class=\"text-center mt-8\">\n\tFokussiere die Kamera auf den QR Code.\n\t</p>\n</div>\n<div class=\"border border-2 border-solid border-black m-8\">\n\t<zxing-scanner\n\t\t#scanner\n\t\t[formats]=\"['QR_CODE']\"\n\t\t[device]=\"selectedDevice\"\n\t\t(scanSuccess)=\"handleQrCodeResult($event)\"\n\t\t>\n\t</zxing-scanner>\t\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QrService {\n\n    constructor(private http: HttpClient) {}\n\n    getQrCode() {\n\n\t\tconst requestOptions: Object = {\n\t\t\tresponseType: 'text'\n\t\t};\n\n        return this.http.get<any>(`${environment.apiUrl}/users/qr-code`, requestOptions);\n    }\n\n\tregisterContactEvent(scannedQr) {\n        return this.http.post<any>(`${environment.apiUrl}/contact-event`, {\n\t\t\tscannedQrCode: scannedQr,\n\t\t\t\"locationEvent\" : {\n\t\t\t\t\"latitude\": 52.5045318,\n\t\t\t\t\"longitude\": 13.3886752\n\t\t\t}\n\t\t});\n\t}\n\n    // registerContactEvent(user: RegistrationModel) {\n        // return this.http.post<any>(`${environment.apiUrl}/reg`, user)\n            // .pipe(map(response => {\n                // // store user details and jwt token in local storage to keep user logged in between page refreshes\n                // localStorage.setItem('jwt_token', JSON.stringify(response.jwt_token));\n                // this.authState.isLoggedIn = true;\n            // }));\n    // }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex justify-center mt-10\">\n\t<img style=\"margin:auto\" src=\"./assets/sword-stone-pull.svg\"/>\n</div>\n<div class=\"text-center mt-3\">\n\t<h3 class=\"text-xl\">Werde Teil der weltgrößten Gemeinschaft</h3>\n</div>\n<div>\n\t<div class=\"mx-10 my-4\">\n\t\t<label>Name</label><br>\n\t\t<input style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"text\" placeholder=\"Michael Jackson II.\"/>\n\t</div>\n\t<div class=\"mx-10 my-4\">\n\t\t<label>Email</label><br>\n\t\t<input style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"email\" placeholder=\"max@mustermann.de\"/>\n\t</div>\n\t<div class=\"mx-10 my-4\">\n\t\t<label>Password</label><br>\n\t\t<input style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"password\" placeholder=\"123456\"/>\n\t</div>\n\t<div class=\"mx-10 my-4\">\n\t\t<a href=\"#\">Forgot password?</a>\n\t</div>\n\n\t<div class=\"mx-10 mt-12 text-center\">\n\t\t<button style=\"background-color: #395380\" class=\"text-white font-bold py-2 px-4 rounded w-64\">Register</button>\n\t\t<p class=\"mt-8\">\n\t\t\t<a href=\"#\">zum Login</a>\n\t\t</p>\n\t</div>\n\n\t<div class=\"mx-10 mt-8 text-center\">\n\t\t<p>\n\t\t\t<a class=\"underline\" href=\"#\">Terms of Service</a>\n\t\t</p>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-start',\n    templateUrl: './start.component.html',\n    styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n\n    regForm: FormGroup;\n    public loading = false;\n    public error?: string;\n\n    public returnUrl?: string;\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\n    }\n\n    ngOnInit(): void {\n\n        this.regForm = this.fb.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(4)]],\n        });\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n\n    onReg() {\n        this.loading = true;\n\n        this.authService.reg(this.regForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate(['/complete-profile']);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n\n    onLogin() {\n        this.router.navigate(['login'], {queryParams: {returnUrl: this.returnUrl}});\n    }\n\n}\n","<div class=\"flex justify-center mt-10\">\n    <img style=\"margin:auto\" src=\"./assets/sword-stone-pull.svg\"/>\n</div>\n<div class=\"text-center mt-3\">\n    <h3 class=\"text-xl\">Werde Teil der weltgrößten Geminschaft ...</h3>\n</div>\n<form class=\"mx-10 my-4\" [formGroup]=\"regForm\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\" placeholder=\"Michael Jackson II.\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" placeholder=\"jacksonalive@gmail.com\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"*******\">\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onReg()\" [disabled]=\"regForm.invalid\">Registrieren</button>\n\n    <button mat-button (click)=\"onLogin()\">zum Login</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-travel',\n  templateUrl: './travel.component.html',\n  styleUrls: ['./travel.component.scss']\n})\nexport class TravelComponent implements OnInit {\n\n  travelForm: FormGroup;\n  constructor(private bsRef: MatBottomSheetRef<TravelComponent>, private fb: FormBuilder) {\n\n  }\n\n  ngOnInit(): void {\n    this.travelForm = this.fb.group({\n      countryName: ['Deutschland'],\n      countryCode: ['de'],\n      from: [null, Validators.required],\n      to: [null, Validators.required],\n      notice: [],\n    });\n  }\n\n  onSubmit() {\n    this.bsRef.dismiss(this.travelForm.value);\n  }\n\n  onCancel() {\n    this.bsRef.dismiss(undefined);\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"travelForm\" fxLayoutGap=\"1em\">\n\n    <div fxLayout=\"row\">\n        <mat-icon>flight</mat-icon>\n        <h1>Wohin ging dieine Reise?</h1>\n    </div>\n\n    <mat-form-field>\n        <mat-label>Land Name</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"countryName\" required>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Land Code</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"countryCode\" required>\n    </mat-form-field>\n\n    <div>\n        In welchem Zeitraum?\n    </div>\n\n\n    <mat-form-field>\n        <mat-label>Von</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"from\" required  type=\"date\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Bis</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"to\" required type=\"date\">\n    </mat-form-field>\n\n\n    <mat-form-field>\n        <mat-label>Anmerkung</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"notice\">\n    </mat-form-field>\n\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\" [disabled]=\"travelForm.invalid\">Reise eintragen</button>\n    <button mat-button (click)=\"onCancel()\">Abbrechen</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { TravelComponent } from '../travel/travel.component';\nimport { TravelModel } from '../models/travel.model';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-travels',\n    templateUrl: './travels.component.html',\n    styleUrls: ['./travels.component.scss']\n})\nexport class TravelsComponent implements OnInit {\n\n    constructor(private bs: MatBottomSheet, private router: Router) {\n    }\n\n\n    journeys: TravelModel[] = [{\n        countryName: 'Italien',\n        countryCode: 'it',\n        from: new Date(2020, 2, 1),\n        to: new Date(2020, 2, 15),\n    }];\n\n    ngOnInit(): void {\n\n    }\n\n    onBack() {\n\n    }\n\n    onSubmit() {\n        // TODO save\n        this.router.navigate(['/profile-completed']);\n    }\n\n    onAdd() {\n        this.bs.open(TravelComponent).afterDismissed().subscribe(travel => {\n            if (travel) {\n                this.journeys.push(travel);\n            }\n        });\n    }\n\n    finalLabel() {\n        return this.journeys.length === 0 ? 'Nein, ich bin hier gewesen' : 'Profil speichern';\n    }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <ng-template matStepLabel>Reisen</ng-template>\n\n    <h3>Bist du in den letzten 4-6 Wochen verreist?</h3>\n\n    <small *ngIf=\"journeys.length > 0\">Eingetragene Reisen</small>\n    <mat-card *ngFor=\"let journey of journeys\" >\n        <mat-card-content gdAreas=\"flag name opt | flag date date\" gdColumns=\"80px auto 40px\">\n            <img gdArea=\"flag\" src=\"https://www.countryflags.io/{{journey.countryCode}}/flat/64.png\">\n            <h2 gdArea=\"name\">{{journey.countryName}}</h2>\n            <button gdArea=\"opt\" mat-icon-button><mat-icon>more_vert</mat-icon></button>\n            <small gdArea=\"date\">{{ journey.from | date }} - {{ journey.to | date }} </small>\n        </mat-card-content>\n    </mat-card>\n\n    <div fxLayout=\"row center\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\" (click)=\"onAdd()\">\n        <button mat-mini-fab color=\"primary\"><mat-icon>flight</mat-icon></button>\n        <div>Reise hinzufügen</div>\n    </div>\n\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\">{{ finalLabel() }}</button>\n    <button mat-button (click)=\"onBack()\" >zurück</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:8080',\n    autoLogin: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
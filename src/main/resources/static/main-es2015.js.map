{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-state.service.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/jwt.interceptor.ts","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/logout.component.ts","./src/app/auth/logout.component.html","./src/app/auth/not-logged-in.guard.ts","./src/app/complete-profile/complete-profile.component.ts","./src/app/complete-profile/complete-profile.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/profile-completed/profile-completed.component.ts","./src/app/profile-completed/profile-completed.component.html","./src/app/qr-code-handling/qr-code-display.component.ts","./src/app/qr-code-handling/qr-code-display.component.html","./src/app/qr-code-handling/qr-code-reader.component.ts","./src/app/qr-code-handling/qr-code-reader.component.html","./src/app/qr-code-handling/qr.service.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/start/start.component.ts","./src/app/start/start.component.html","./src/app/travel/travel.component.ts","./src/app/travel/travel.component.html","./src/app/travels/travels.component.ts","./src/app/travels/travels.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { NotLoggedInGuard } from './auth/not-logged-in.guard';\n\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { QrCodeReaderComponent } from './qr-code-handling/qr-code-reader.component';\nimport { QrCodeDisplayComponent } from './qr-code-handling/qr-code-display.component';\nimport { LoginComponent } from './auth/login.component';\nimport { LogoutComponent } from './auth/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { StartComponent } from './start/start.component';\nimport { CompleteProfileComponent } from './complete-profile/complete-profile.component';\nimport { TravelsComponent } from './travels/travels.component';\nimport { ProfileCompletedComponent } from './profile-completed/profile-completed.component';\n\n\nconst routes: Routes = [\n\t// public\n\t{ path: 'start', component: StartComponent },\n\t{ path: 'login', component: LoginComponent, canActivate: [NotLoggedInGuard] },\n\t{ path: 'logout', component: LogoutComponent },\n\t{ path: 'sign-up', component: SignUpComponent, canActivate: [NotLoggedInGuard] },\n\n\t// logged in\n\t// { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n\t{ path: 'qr-code-reader', component: QrCodeReaderComponent, canActivate: [AuthGuard] },\n\t{ path: '', component: QrCodeDisplayComponent, canActivate: [AuthGuard] },\n\t{ path: 'qr-code-display', component: QrCodeDisplayComponent, canActivate: [AuthGuard] },\n\n\t{ path: 'complete-profile', component: CompleteProfileComponent, canActivate: [AuthGuard] },\n\t{ path: 'profile-completed', component: ProfileCompletedComponent, canActivate: [AuthGuard] },\n\t{ path: 'travels', component: TravelsComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'infectionchain';\n}\n","<div class=\"m-8\">\n    <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n// qr code functionality\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { NgxKjuaModule } from 'ngx-kjua';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { QrCodeReaderComponent } from './qr-code-handling/qr-code-reader.component';\nimport { QrCodeDisplayComponent } from './qr-code-handling/qr-code-display.component';\n// auth\nimport { LoginComponent } from './auth/login.component';\nimport { ErrorInterceptor } from './auth/error.interceptor';\nimport { JwtInterceptor } from './auth/jwt.interceptor';\nimport { fakeBackendProvider } from './auth/fake-backend.interceptor';\nimport { HomeComponent } from './home/home.component';\nimport { LogoutComponent } from './auth/logout.component';\nimport { StartComponent } from './start/start.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { TravelComponent } from './travel/travel.component';\nimport { CompleteProfileComponent } from './complete-profile/complete-profile.component';\nimport { TravelsComponent } from './travels/travels.component';\nimport { ProfileCompletedComponent } from './profile-completed/profile-completed.component';\nimport { MatListModule } from '@angular/material/list';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tSignUpComponent,\n\t\tQrCodeReaderComponent,\n\t\tQrCodeDisplayComponent,\n\t\tLoginComponent,\n\t\tHomeComponent,\n\t\tLogoutComponent,\n\t\tStartComponent,\n        CompleteProfileComponent,\n        TravelsComponent,\n        TravelComponent,\n        ProfileCompletedComponent\n\t],\n\timports: [\n        CommonModule,\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tHttpClientModule,\n\t\tAppRoutingModule,\n\t\tZXingScannerModule,\n\t\tNgxKjuaModule,\n\n\t\tFlexLayoutModule,\n\t\tMatButtonModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tBrowserAnimationsModule,\n\t\tReactiveFormsModule,\n        MatIconModule,\n        MatCheckboxModule,\n        MatBottomSheetModule,\n        MatCardModule,\n        MatListModule,\n\t],\n\tproviders: [\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n\t\t// { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\t\t{ provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {floatLabel: 'always'}},\n\n        // provider used to create fake backend\n        // fakeBackendProvider\n    ],\n    entryComponents: [\n        TravelComponent,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthStateService {\n\n    public isLoggedIn = false;\n    public jwtToken: string;\n\n    constructor() {\n        let tmp = localStorage.getItem('jwt_token');\n        if (tmp) {\n            this.jwtToken = tmp;\n            this.isLoggedIn = true;\n        }\n    }\n\n    login(jwtToken) {\n        this.jwtToken = jwtToken;\n        localStorage.setItem('jwt_token', jwtToken);\n        this.isLoggedIn = true;\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        this.jwtToken = undefined;\n        localStorage.removeItem('jwt_token');\n        this.isLoggedIn = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthStateService } from './auth-state.service';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authState: AuthStateService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (this.authState.isLoggedIn || environment.autoLogin) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n\t\tthis.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { RegistrationModel } from '../models/registration.model';\nimport { AuthStateService } from './auth-state.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient, private authState: AuthStateService) {}\n\n    login(email: string, password: string) {\n\n\t\tconst requestOptions: Object = {\n\t\t\tresponseType: 'text'\n\t\t};\n\n        return this.http.post<any>(`${environment.apiUrl}/users/login`, {\n\t\t\t\t\"email\": email,\n\t\t\t\t\"password\": password\n\t\t\t},\n\t\t\trequestOptions\n\t\t\t)\n            .pipe(map(response => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n\t\t\t\tthis.authState.login(response);\n            }));\n    }\n\n    reg(user: RegistrationModel) {\n        return this.http.post<any>(`${environment.apiUrl}/reg`, user)\n            .pipe(map(response => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('jwt_token', response.jwt_token);\n                this.authState.isLoggedIn = true;\n            }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthStateService } from './auth-state.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authState: AuthStateService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        if (this.authState.isLoggedIn && this.authState.jwtToken) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${this.authState.jwtToken}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\tpublic loading: boolean = false;\n\tpublic error: string;\n\n\tpublic username: string = \"\";\n\tpublic password: string = \"\";\n\n\tpublic returnUrl: string = \"\";\n\n    regForm: FormGroup;\n\n\tconstructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) { }\n\n\tngOnInit(): void {\n        this.regForm = this.fb.group({\n            'email': ['', [Validators.required, Validators.email]],\n            'password': ['', [Validators.required, Validators.minLength(1)]],\n        });\n\n\t\tthis.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n\t}\n\n\tonLogin() {\n\t\tthis.authService.login(this.regForm.value.email, this.regForm.value.password)\n\t\t\t// .pipe(first())\n\t\t\t.subscribe(\n\t\t\t\tdata => {\n\t\t\t\t\t// this.router.navigate([this.returnUrl]);\n\t\t\t\t\tthis.router.navigate(['']);\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tthis.error = error;\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t});\n\t}\n}\n","<div class=\"flex justify-center mt-10\">\n\t<img style=\"margin:auto\" src=\"./assets/sword-stone-pull.svg\"/>\n</div>\n<div class=\"text-center mt-3\">\n\t<h3 class=\"text-xl\">Login</h3>\n</div>\n<form class=\"mx-10 my-4\" [formGroup]=\"regForm\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" placeholder=\"jacksonalive@gmail.com\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"*******\">\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onLogin()\" [disabled]=\"regForm.invalid\">Login</button>\n</form>\n\n\n<!-- <div> -->\n\t<!-- <div class=\"mx-10 my-4\"> -->\n\t\t<!-- <label>Name</label><br> -->\n\t\t<!-- <input [(ngModel)]=\"username\" style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"text\" placeholder=\"Michael Jackson II.\"/> -->\n\t<!-- </div> -->\n\t<!-- <div class=\"mx-10 my-4\"> -->\n\t\t<!-- <label>Password</label><br> -->\n\t\t<!-- <input [(ngModel)]=\"password\" style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"password\" placeholder=\"123456\"/> -->\n\t<!-- </div> -->\n\t<!-- <div class=\"mx-10 my-4\"> -->\n\t\t<!-- <a href=\"#\">Forgot password?</a> -->\n\t<!-- </div> -->\n\n\t<!-- <div class=\"mx-10 mt-12 text-center\"> -->\n\t\t<!-- <button (click)=\"onSubmit()\" style=\"background-color: #395380\" class=\"text-white font-bold py-2 px-4 rounded w-64\">Login</button> -->\n\t<!-- </div> -->\n<!-- </div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { AuthStateService } from './auth-state.service';\n\n@Component({\n\tselector: 'app-logout',\n\ttemplateUrl: './logout.component.html',\n\tstyleUrls: []\n})\nexport class LogoutComponent implements OnInit {\n\n\tconstructor(private authState: AuthStateService){}\n\n\tngOnInit(): void {\n\t\tthis.authState.logout();\n\t}\n\n}\n","<p>logout works!</p>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthStateService } from './auth-state.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NotLoggedInGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authState: AuthStateService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (!this.authState.isLoggedIn) {\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n\t\tthis.router.navigate(['']);\n        return false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-complete-profile',\n  templateUrl: './complete-profile.component.html',\n  styleUrls: ['./complete-profile.component.scss']\n})\nexport class CompleteProfileComponent implements OnInit {\n\n\n  profilForm: FormGroup;\n  journeyForm: FormGroup;\n  constructor(private fb: FormBuilder, private router: Router) { }\n\n  finalLabel() {\n    return this.journeyForm.value.journeys.length === 0 ? 'Nein, ich bin hier gewesen' : 'Fertig';\n  }\n\n  ngOnInit(): void {\n    this.profilForm = this.fb.group({\n      name: ['', Validators.required],\n      birthday: [null, Validators.required],\n      phone: [],\n      street: [],\n      zip: [],\n      city: [],\n      country: ['Deutschland'],\n      img: [],\n      correctness: [false, Validators.requiredTrue],\n    });\n\n  }\n\n  journeys() {\n    return this.journeyForm.controls.journeys as FormArray;\n  }\n\n\n  onBack() {\n    this.router.navigate(['/']);\n  }\n\n  onSubmit() {\n    this.router.navigate(['/travels']);\n  }\n}\n","<form [formGroup]=\"profilForm\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <h1>Vervollständige dein Profil</h1>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n        <mat-icon>person</mat-icon>\n        <p>Deine Daten können lediglich deine Freunde sehen. Für uns ist es wichtig, dass du wirklich du bist.</p>\n    </div>\n\n    <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"name\" required>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Geburtstrag</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"birthday\" required type=\"date\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Telefonnummer</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"phone\" type=\"tel\">\n    </mat-form-field>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n        <mat-icon>place</mat-icon>\n        <p>Mit deinem Wohnsitz verrifizieren wir dich als Person und erstellen ir deinen Notfallpass.</p>\n    </div>\n\n    <mat-form-field>\n        <mat-label>Straße mit Hausnummer</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"street\" >\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Postleitzahl</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"zip\" >\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Ort</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"city\" >\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Land</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"country\" >\n    </mat-form-field>\n\n    <mat-label>Profil</mat-label>\n    <input placeholder=\"\" formControlName=\"img\" type=\"file\">\n\n    <div fxLayout=\"row\" fxLayoutGap=\"1em\">\n        <mat-checkbox formControlName=\"correctness\" color=\"primary\"></mat-checkbox>\n        <small>Hiermit bestätige ich die Richtigkeit meiner Angaben</small>\n    </div>\n    <button mat-raised-button (click)=\"onSubmit()\" [disabled]=\"profilForm.invalid\" color=\"primary\">Weiter</button>\n    <button mat-button (click)=\"onBack()\">zurück</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <a  [routerLink]=\"['/complete-profile']\">Complete Profile</a>\n    <a  [routerLink]=\"['/qr-code-reader']\"> Scan QR Code</a>\n    <a  [routerLink]=\"['/qr-code-display']\">Show personal QR Code</a>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-completed',\n  templateUrl: './profile-completed.component.html',\n  styleUrls: ['./profile-completed.component.scss']\n})\nexport class ProfileCompletedComponent implements OnInit {\n\n  emails: string[] = [''];\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onEmailAdd() {\n    this.emails = [...this.emails, ''];\n  }\n\n  onDashboard() {\n    this.router.navigate(['/']);\n  }\n\n  onEmailSend() {\n    // TODO\n  }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"1em\">\n\n    <img>\n\n    <div>\n        <h2>Super</h2>\n        <h1>Dein Proil ist vollständig</h1>\n        <p>\n            Du hast nun vollen Zugriff auf die Auswertungen und Funktionen der App:\n        </p>\n    </div>\n\n    <mat-card>\n        <mat-card-content>\n            <mat-list>\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                       Überblick über aktuelle Mitmenschen an bestimmten Orten\n                    </p>\n                </mat-list-item>\n\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                        Verstehe welche ptentiellen Risiken dich an den verschienden Orten begegnen\n                    </p>\n                </mat-list-item>\n\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                        Bekomme Benachrichtigungen bei erhöhten Ansammlungen von Menschen\n                    </p>\n                </mat-list-item>\n\n                <mat-list-item >\n                    <mat-icon matListIcon>done</mat-icon>\n                    <p>\n                        Bleibe up-to-date bei aktuellen Entscheidungen der Regierung\n                    </p>\n                </mat-list-item>\n            </mat-list>\n        </mat-card-content>\n    </mat-card>\n\n    <p>\n        Werden Personen positiv auf Corona getestet, können Riskogruppen und Menschen informiert werden, sodass rechtzeitig die entpsrechnenden Schritte eingelietet werden können.\n    </p>\n\n    <div fxLayout=\"row\">\n        <img>\n        <div>Hilf uns alle Menschen zu erreichen auch deine Familie.</div>\n    </div>\n\n    <mat-form-field *ngFor=\"let email of emails; let i = index\">\n        <mat-label>Email</mat-label>\n        <input matInput placeholder=\"Alicewondertree@gmail.com\" [(ngModel)]=\"emails[i]\">\n    </mat-form-field>\n\n    <div fxLayout=\"row\" (click)=\"onEmailAdd()\">\n        <mat-icon>add</mat-icon>\n        weitere Menschen einladen\n    </div>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onEmailSend()\" >Email versenden</button>\n    <button mat-button (click)=\"onDashboard()\">Zum Dashboard</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QrService } from './qr.service';\n\n@Component({\n\tselector: 'app-qr-code-display',\n\ttemplateUrl: './qr-code-display.component.html',\n\tstyleUrls: ['./qr-code-display.component.scss']\n})\nexport class QrCodeDisplayComponent implements OnInit {\n\n\tconstructor(private router: Router, private qrService: QrService) { }\n\n\tqrCode: string = \"hallo\";\n\n\tngOnInit(): void {\n\t\tthis.qrService.getQrCode().subscribe((qrCode) => {\n\t\t\tthis.qrCode = qrCode;\n\t\t});\n\t}\n\n\ttoQrReader() {\n\t\tthis.router.navigate(['/qr-code-reader']);\n\t}\n}\n","<div class=\"text-center m-12\">\n\t<h1 class=\"font-bold text-3xl mt-4\">Dein QR Code</h1>\n\t<p class=\"my-4 text-center\">\n\t\tLass andere diesen QR Code scannen, um euren Kontakt zu dokumentieren.\n\t</p>\n\t<div class=\"flex justify-content pt-8\">\n\t\t<p class=\"m-auto\">\n\t\t\t<ngx-kjua [text]=\"qrCode\"></ngx-kjua>\n\t\t</p>\n\t</div>\n</div>\n\n<form class=\"mx-10 my-8\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n\t<button mat-raised-button class=\"m-auto mx-8\" color=\"primary\" (click)=\"toQrReader()\">QR Reader</button>\n</form>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { QrService } from './qr.service';\n\n@Component({\n  selector: 'app-qr-code-reader',\n  templateUrl: './qr-code-reader.component.html',\n  styleUrls: ['./qr-code-reader.component.scss']\n})\nexport class QrCodeReaderComponent implements OnInit, AfterViewInit {\n\n    hasCameras = false;\n    hasPermission: boolean;\n    qrResultString: string;\n\n\tmessage: string = \"\";\n\n    availableDevices: MediaDeviceInfo[];\n    selectedDevice: MediaDeviceInfo = null;\n\n    @ViewChild('scanner')\n    scanner: ZXingScannerComponent;\n\n\tconstructor(private qrService: QrService) { }\n\n\tngOnInit(): void {\n\t}\n\n\tngAfterViewInit(): void {\n        this.scanner.camerasFound.subscribe(\n\t\t\t(devices: MediaDeviceInfo[]) => {\n\t\t\t\tconsole.log(devices);\n\n\t\t\t\tthis.hasCameras = true;\n\t\t\t\tif(devices.length == 0)\n\t\t\t\t\tthis.hasCameras = false;\n\n\t\t\t\tthis.availableDevices = devices;\n\n\t\t\t\tif(this.availableDevices.length == 1)\n\t\t\t\t\tthis.selectedDevice = this.availableDevices[0];\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// selects the devices's back camera\n\t\t\t\t\tfor (const device of devices) {\n\t\t\t\t\t\tif (/back|rear|rück|environment/gi.test(device.label)) {\n\t\t\t\t\t\t\tthis.selectedDevice = device;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if(!this.selectedDevice)\n\t\t\t\t// {\n\t\t\t\t\t// this.message = \"Das verwendete Gerät wird nicht unterstützt oder hat keine Kamera auf der Rückseite.\";\n\t\t\t\t// }\n\n\t\t\t\t// this.scanner.restartScan();\n\t\t\t}\n\t\t);\n\n\t\tthis.scanner.camerasNotFound.subscribe((devices: MediaDeviceInfo[]) => {\n\t\t\tthis.hasCameras = false;\n\t\t\tthis.message = \"Das verwendete Gerät wird nicht unterstützt oder hat keine Kameras.\";\n\t\t});\n\n\t\tthis.scanner.permissionResponse.subscribe((answer: boolean) => {\n\t\t\tthis.hasPermission = answer;\n\n\t\t\tif(!answer)\n\t\t\t\tthis.message = \"ResearchDesk hat keine Erlaubnis auf die Kamera zuzugreifen. Bitte aktivieren Sie Kamerazugriff.\";\n\t\t});\n\t}\n\n    handleQrCodeResult(resultString: string) {\n\t\tconsole.log(\"trying to register contact event\", resultString);\n\t\tthis.qrService.registerContactEvent(resultString).subscribe(()=> {\n\t\t\tconsole.log(\"registered contact event for\", resultString);\n\t\t});\n\n\t\t// this.public_patient_service.check_if_patient_exists(pid).subscribe((result) => {\n\t\t\t// if(result)\n\t\t\t// {\n\t\t\t\t// let patient_token = result;\n\t\t\t\t// this.router.navigate([\"patient\", patient_token]);\n\t\t\t// }\n\t\t\t// else\n\t\t\t\t// this.router.navigate([\"consent\", pid]);\n\t\t// });\n\n\n        this.qrResultString = resultString;\n    }\n}\n","<div class=\"text-center\">\n\t<h1 class=\"font-bold text-3xl mt-4\">QR Code scannen</h1>\n\t<p class=\"text-center mt-8\">\n\tFokussiere die Kamera auf den QR Code.\n\t</p>\n</div>\n<div class=\"border border-2 border-solid border-black m-8\">\n\t<zxing-scanner\n\t\t#scanner\n\t\t[formats]=\"['QR_CODE']\"\n\t\t[device]=\"selectedDevice\"\n\t\t(scanSuccess)=\"handleQrCodeResult($event)\"\n\t\t>\n\t</zxing-scanner>\t\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QrService {\n\n    constructor(private http: HttpClient) {}\n\n    getQrCode() {\n\n\t\tconst requestOptions: Object = {\n\t\t\tresponseType: 'text'\n\t\t};\n\n        return this.http.get<any>(`${environment.apiUrl}/users/qr-code`, requestOptions);\n    }\n\n\tregisterContactEvent(scannedQr) {\n        return this.http.post<any>(`${environment.apiUrl}/contact-event`, {\n\t\t\tscannedQrCode: scannedQr,\n\t\t\t\"locationEvent\" : {\n\t\t\t\t\"latitude\": 52.5045318,\n\t\t\t\t\"longitude\": 13.3886752\n\t\t\t}\n\t\t});\n\t}\n\n    // registerContactEvent(user: RegistrationModel) {\n        // return this.http.post<any>(`${environment.apiUrl}/reg`, user)\n            // .pipe(map(response => {\n                // // store user details and jwt token in local storage to keep user logged in between page refreshes\n                // localStorage.setItem('jwt_token', JSON.stringify(response.jwt_token));\n                // this.authState.isLoggedIn = true;\n            // }));\n    // }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flex justify-center mt-10\">\n\t<img style=\"margin:auto\" src=\"./assets/sword-stone-pull.svg\"/>\n</div>\n<div class=\"text-center mt-3\">\n\t<h3 class=\"text-xl\">Werde Teil der weltgrößten Gemeinschaft</h3>\n</div>\n<div>\n\t<div class=\"mx-10 my-4\">\n\t\t<label>Name</label><br>\n\t\t<input style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"text\" placeholder=\"Michael Jackson II.\"/>\n\t</div>\n\t<div class=\"mx-10 my-4\">\n\t\t<label>Email</label><br>\n\t\t<input style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"email\" placeholder=\"max@mustermann.de\"/>\n\t</div>\n\t<div class=\"mx-10 my-4\">\n\t\t<label>Password</label><br>\n\t\t<input style=\"border-color: #b9b9b9\" class=\"appearance-none bg-transparent w-full text-gray-700 mr-3 py-1 leading-tight focus:outline-none border-b border-b-2 border-teal-500\" type=\"password\" placeholder=\"123456\"/>\n\t</div>\n\t<div class=\"mx-10 my-4\">\n\t\t<a href=\"#\">Forgot password?</a>\n\t</div>\n\n\t<div class=\"mx-10 mt-12 text-center\">\n\t\t<button style=\"background-color: #395380\" class=\"text-white font-bold py-2 px-4 rounded w-64\">Register</button>\n\t\t<p class=\"mt-8\">\n\t\t\t<a href=\"#\">zum Login</a>\n\t\t</p>\n\t</div>\n\n\t<div class=\"mx-10 mt-8 text-center\">\n\t\t<p>\n\t\t\t<a class=\"underline\" href=\"#\">Terms of Service</a>\n\t\t</p>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-start',\n    templateUrl: './start.component.html',\n    styleUrls: ['./start.component.scss']\n})\nexport class StartComponent implements OnInit {\n\n\n    regForm: FormGroup;\n    public loading = false;\n    public error?: string;\n\n    public returnUrl?: string;\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\n    }\n\n    ngOnInit(): void {\n\n        this.regForm = this.fb.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(4)]],\n        });\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n\n    onReg() {\n        this.loading = true;\n\n        this.authService.reg(this.regForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate(['/complete-profile']);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n\n    onLogin() {\n        this.router.navigate(['login'], {queryParams: {returnUrl: this.returnUrl}});\n    }\n\n}\n","<div class=\"flex justify-center mt-10\">\n    <img style=\"margin:auto\" src=\"./assets/sword-stone-pull.svg\"/>\n</div>\n<div class=\"text-center mt-3\">\n    <h3 class=\"text-xl\">Werde Teil der weltgrößten Geminschaft ...</h3>\n</div>\n<form class=\"mx-10 my-4\" [formGroup]=\"regForm\" fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"name\" placeholder=\"Michael Jackson II.\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input matInput formControlName=\"email\" placeholder=\"jacksonalive@gmail.com\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"*******\">\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" (click)=\"onReg()\" [disabled]=\"regForm.invalid\">Registrieren</button>\n\n    <button mat-button (click)=\"onLogin()\">zum Login</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-travel',\n  templateUrl: './travel.component.html',\n  styleUrls: ['./travel.component.scss']\n})\nexport class TravelComponent implements OnInit {\n\n  travelForm: FormGroup;\n  constructor(private bsRef: MatBottomSheetRef<TravelComponent>, private fb: FormBuilder) {\n\n  }\n\n  ngOnInit(): void {\n    this.travelForm = this.fb.group({\n      countryName: ['Deutschland'],\n      countryCode: ['de'],\n      from: [null, Validators.required],\n      to: [null, Validators.required],\n      notice: [],\n    });\n  }\n\n  onSubmit() {\n    this.bsRef.dismiss(this.travelForm.value);\n  }\n\n  onCancel() {\n    this.bsRef.dismiss(undefined);\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"travelForm\" fxLayoutGap=\"1em\">\n\n    <div fxLayout=\"row\">\n        <mat-icon>flight</mat-icon>\n        <h1>Wohin ging dieine Reise?</h1>\n    </div>\n\n    <mat-form-field>\n        <mat-label>Land Name</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"countryName\" required>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Land Code</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"countryCode\" required>\n    </mat-form-field>\n\n    <div>\n        In welchem Zeitraum?\n    </div>\n\n\n    <mat-form-field>\n        <mat-label>Von</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"from\" required  type=\"date\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Bis</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"to\" required type=\"date\">\n    </mat-form-field>\n\n\n    <mat-form-field>\n        <mat-label>Anmerkung</mat-label>\n        <input matInput placeholder=\"\" formControlName=\"notice\">\n    </mat-form-field>\n\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\" [disabled]=\"travelForm.invalid\">Reise eintragen</button>\n    <button mat-button (click)=\"onCancel()\">Abbrechen</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { TravelComponent } from '../travel/travel.component';\nimport { TravelModel } from '../models/travel.model';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-travels',\n    templateUrl: './travels.component.html',\n    styleUrls: ['./travels.component.scss']\n})\nexport class TravelsComponent implements OnInit {\n\n    constructor(private bs: MatBottomSheet, private router: Router) {\n    }\n\n\n    journeys: TravelModel[] = [{\n        countryName: 'Italien',\n        countryCode: 'it',\n        from: new Date(2020, 2, 1),\n        to: new Date(2020, 2, 15),\n    }];\n\n    ngOnInit(): void {\n\n    }\n\n    onBack() {\n\n    }\n\n    onSubmit() {\n        // TODO save\n        this.router.navigate(['/profile-completed']);\n    }\n\n    onAdd() {\n        this.bs.open(TravelComponent).afterDismissed().subscribe(travel => {\n            if (travel) {\n                this.journeys.push(travel);\n            }\n        });\n    }\n\n    finalLabel() {\n        return this.journeys.length === 0 ? 'Nein, ich bin hier gewesen' : 'Profil speichern';\n    }\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"1em\">\n    <ng-template matStepLabel>Reisen</ng-template>\n\n    <h3>Bist du in den letzten 4-6 Wochen verreist?</h3>\n\n    <small *ngIf=\"journeys.length > 0\">Eingetragene Reisen</small>\n    <mat-card *ngFor=\"let journey of journeys\" >\n        <mat-card-content gdAreas=\"flag name opt | flag date date\" gdColumns=\"80px auto 40px\">\n            <img gdArea=\"flag\" src=\"https://www.countryflags.io/{{journey.countryCode}}/flat/64.png\">\n            <h2 gdArea=\"name\">{{journey.countryName}}</h2>\n            <button gdArea=\"opt\" mat-icon-button><mat-icon>more_vert</mat-icon></button>\n            <small gdArea=\"date\">{{ journey.from | date }} - {{ journey.to | date }} </small>\n        </mat-card-content>\n    </mat-card>\n\n    <div fxLayout=\"row center\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\" (click)=\"onAdd()\">\n        <button mat-mini-fab color=\"primary\"><mat-icon>flight</mat-icon></button>\n        <div>Reise hinzufügen</div>\n    </div>\n\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\">{{ finalLabel() }}</button>\n    <button mat-button (click)=\"onBack()\" >zurück</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:8080',\n    autoLogin: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}